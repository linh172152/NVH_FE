import React, { useState } from 'react';

const BookingPage: React.FC = () => {
  const [selectedService, setSelectedService] = useState('');
  const [selectedDate, setSelectedDate] = useState('');
  const [selectedTime, setSelectedTime] = useState('');
  const [selectedDuration, setSelectedDuration] = useState('1');
  const [loading, setLoading] = useState(false);

  const services = [
    { id: 'gym', name: 'Ph√≤ng Gym', price: 50000 },
    { id: 'bowling', name: 'Bowling', price: 80000 },
    { id: 'swimming', name: 'B·ªÉ b∆°i', price: 60000 },
    { id: 'tennis', name: 'S√¢n Tennis', price: 120000 },
    { id: 'yoga', name: 'Ph√≤ng Yoga', price: 40000 },
    { id: 'billiard', name: 'B√†n Billiard', price: 70000 },
  ];

  const timeSlots = [
    '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00',
    '16:00', '17:00', '18:00', '19:00', '20:00', '21:00'
  ];

  const durations = [
    { value: '1', label: '1 gi·ªù' },
    { value: '2', label: '2 gi·ªù' },
    { value: '3', label: '3 gi·ªù' },
    { value: '4', label: '4 gi·ªù' },
  ];

  const selectedServiceData = services.find(s => s.id === selectedService);
  const totalPrice = selectedServiceData ? selectedServiceData.price * parseInt(selectedDuration) : 0;

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    
    // Simulate API call
    setTimeout(() => {
      alert('ƒê·∫∑t ch·ªó th√†nh c√¥ng! Ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n s·ªõm nh·∫•t.');
      setLoading(false);
      // Reset form
      setSelectedService('');
      setSelectedDate('');
      setSelectedTime('');
      setSelectedDuration('1');
    }, 2000);
  };

  return (
    <div className="max-w-4xl mx-auto space-y-8">
      {/* Header */}
      <div className="text-center">
        <h1 className="text-3xl font-bold text-gray-900 mb-4">ƒê·∫∑t ch·ªó d·ªãch v·ª•</h1>
        <p className="text-lg text-gray-600">
          Ch·ªçn d·ªãch v·ª• v√† th·ªùi gian ph√π h·ª£p ƒë·ªÉ ƒë·∫∑t ch·ªó
        </p>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        {/* Booking Form */}
        <div className="bg-white rounded-lg shadow-lg p-6">
          <h2 className="text-xl font-semibold text-gray-900 mb-6">Th√¥ng tin ƒë·∫∑t ch·ªó</h2>
          
          <form onSubmit={handleSubmit} className="space-y-6">
            {/* Service Selection */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Ch·ªçn d·ªãch v·ª• *
              </label>
              <select
                value={selectedService}
                onChange={(e) => setSelectedService(e.target.value)}
                required
                className="input-field"
              >
                <option value="">-- Ch·ªçn d·ªãch v·ª• --</option>
                {services.map((service) => (
                  <option key={service.id} value={service.id}>
                    {service.name} - {service.price.toLocaleString()} VNƒê/gi·ªù
                  </option>
                ))}
              </select>
            </div>

            {/* Date Selection */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Ch·ªçn ng√†y *
              </label>
              <input
                type="date"
                value={selectedDate}
                onChange={(e) => setSelectedDate(e.target.value)}
                required
                min={new Date().toISOString().split('T')[0]}
                className="input-field"
              />
            </div>

            {/* Time Selection */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Ch·ªçn gi·ªù *
              </label>
              <select
                value={selectedTime}
                onChange={(e) => setSelectedTime(e.target.value)}
                required
                className="input-field"
              >
                <option value="">-- Ch·ªçn gi·ªù --</option>
                {timeSlots.map((time) => (
                  <option key={time} value={time}>
                    {time}
                  </option>
                ))}
              </select>
            </div>

            {/* Duration Selection */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Th·ªùi l∆∞·ª£ng *
              </label>
              <select
                value={selectedDuration}
                onChange={(e) => setSelectedDuration(e.target.value)}
                required
                className="input-field"
              >
                {durations.map((duration) => (
                  <option key={duration.value} value={duration.value}>
                    {duration.label}
                  </option>
                ))}
              </select>
            </div>

            {/* Submit Button */}
            <button
              type="submit"
              disabled={loading || !selectedService || !selectedDate || !selectedTime}
              className="w-full btn-primary disabled:opacity-50 disabled:cursor-not-allowed"
            >
              {loading ? (
                <div className="flex items-center justify-center">
                  <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                  ƒêang x·ª≠ l√Ω...
                </div>
              ) : (
                'X√°c nh·∫≠n ƒë·∫∑t ch·ªó'
              )}
            </button>
          </form>
        </div>

        {/* Booking Summary */}
        <div className="space-y-6">
          {/* Price Summary */}
          <div className="bg-white rounded-lg shadow-lg p-6">
            <h3 className="text-lg font-semibold text-gray-900 mb-4">T√≥m t·∫Øt ƒë·∫∑t ch·ªó</h3>
            
            {selectedServiceData ? (
              <div className="space-y-4">
                <div className="flex justify-between items-center">
                  <span className="text-gray-600">D·ªãch v·ª•:</span>
                  <span className="font-medium">{selectedServiceData.name}</span>
                </div>
                <div className="flex justify-between items-center">
                  <span className="text-gray-600">Ng√†y:</span>
                  <span className="font-medium">{selectedDate}</span>
                </div>
                <div className="flex justify-between items-center">
                  <span className="text-gray-600">Gi·ªù:</span>
                  <span className="font-medium">{selectedTime}</span>
                </div>
                <div className="flex justify-between items-center">
                  <span className="text-gray-600">Th·ªùi l∆∞·ª£ng:</span>
                  <span className="font-medium">{selectedDuration} gi·ªù</span>
                </div>
                <div className="flex justify-between items-center">
                  <span className="text-gray-600">ƒê∆°n gi√°:</span>
                  <span className="font-medium">{selectedServiceData.price.toLocaleString()} VNƒê/gi·ªù</span>
                </div>
                <hr />
                <div className="flex justify-between items-center text-lg font-bold">
                  <span>T·ªïng c·ªông:</span>
                  <span className="text-primary-600">{totalPrice.toLocaleString()} VNƒê</span>
                </div>
              </div>
            ) : (
              <p className="text-gray-500 text-center py-8">
                Vui l√≤ng ch·ªçn d·ªãch v·ª• ƒë·ªÉ xem t√≥m t·∫Øt
              </p>
            )}
          </div>

          {/* Booking Tips */}
          <div className="bg-blue-50 rounded-lg p-6">
            <h4 className="font-semibold text-blue-900 mb-3">L∆∞u √Ω khi ƒë·∫∑t ch·ªó:</h4>
            <ul className="space-y-2 text-sm text-blue-800">
              <li className="flex items-start">
                <span className="text-blue-600 mr-2">‚Ä¢</span>
                ƒê·∫∑t ch·ªó tr∆∞·ªõc √≠t nh·∫•t 2 gi·ªù ƒë·ªÉ ƒë·∫£m b·∫£o c√≥ ch·ªó
              </li>
              <li className="flex items-start">
                <span className="text-blue-600 mr-2">‚Ä¢</span>
                C√≥ th·ªÉ h·ªßy ƒë·∫∑t ch·ªó tr∆∞·ªõc 1 gi·ªù m√† kh√¥ng b·ªã ph·∫°t
              </li>
              <li className="flex items-start">
                <span className="text-blue-600 mr-2">‚Ä¢</span>
                Th√†nh vi√™n ƒë∆∞·ª£c ∆∞u ti√™n ƒë·∫∑t ch·ªó v√† gi·∫£m gi√°
              </li>
              <li className="flex items-start">
                <span className="text-blue-600 mr-2">‚Ä¢</span>
                Vui l√≤ng ƒë·∫øn ƒë√∫ng gi·ªù ƒë·ªÉ tr√°nh m·∫•t ch·ªó
              </li>
            </ul>
          </div>

          {/* Contact Info */}
          <div className="bg-gray-50 rounded-lg p-6">
            <h4 className="font-semibold text-gray-900 mb-3">C·∫ßn h·ªó tr·ª£?</h4>
            <div className="space-y-2 text-sm text-gray-600">
              <p>üìû Hotline: 0123 456 789</p>
              <p>üìß Email: booking@nvh.edu.vn</p>
              <p>üïí Gi·ªù l√†m vi·ªác: 7:00 - 22:00</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default BookingPage;
